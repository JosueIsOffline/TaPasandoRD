{% extends "layout.html.twig" %}
{%block body_class%}
  validation-report-body
{% endblock %}

{% block stylesheets %}
{{parent()}}
<link rel="stylesheet" href="/assets/css/incident-cards.css">
{% endblock %}

{% block content %}
<div class="background-canvas" aria-hidden="true"></div>

<div class="container-fluid p-4">
  <div id="list" class="incidents-container">
    {% for incident in incidents %}
      <div class="incident-wrapper">
        <!-- Card vacía arriba -->
        <a href="#" class="incident-card">
          <span class="category-badge" style="background-color: {{incident.category_color|default('#3b82f6')}}">{{incident.category_name}}</span>
        </a>
        
        <!-- Información debajo de la card -->
        <div class="incident-info">
          <h3 class="title">{{incident.title}}</h3>
          <time datetime="{{incident.updated_at}}">
            {{incident.updated_at|date('d M Y')}}
            <span class="separator">⦁</span>
            Hace 2 horas
          </time>
          <p class="description">{{incident.description}}</p>
        </div>
      </div>
    {% endfor %}
  </div>
</div>
{% endblock %}

{% block scripts %}
{{parent()}}
  <script>
  function timeAgo(dateString) {
    const date = new Date(dateString);
    const now = new Date();
    const diff = (now - date) / 1000; 

    if (diff < 60) return `Hace ${Math.floor(diff)} segundos`;
    if (diff < 3600) return `Hace ${Math.floor(diff / 60)} minutos`;
    if (diff < 86400) return `Hace ${Math.floor(diff / 3600)} horas`;
    if (diff < 2592000) return `Hace ${Math.floor(diff / 86400)} días`;

    return date.toLocaleDateString(); 
  }

  function formatDate(dateString) {
    const date = new Date(dateString);
    const months = ['Ene', 'Feb', 'Mar', 'Abr', 'May', 'Jun', 'Jul', 'Ago', 'Sep', 'Oct', 'Nov', 'Dic'];
    return `${date.getDate()} ${months[date.getMonth()]} ${date.getFullYear()}`;
  }

  async function loadIncidents() {
    const container = document.getElementById("list")
    const res = await fetch("http://localhost:3300/api/valid-incident")
    const incidents = await res.json()

    container.innerHTML = incidents
      .map(
        (incident) => `
          <div class="incident-wrapper">
            <!-- Card vacía arriba -->
            <a href="#" class="incident-card">
              <span class="category-badge" style="background-color: ${incident.category_color || '#3b82f6'}">${incident.category_name || 'Incidente'}</span>
            </a>
            
            <!-- Información debajo de la card, alineada a la izquierda -->
            <div class="incident-info">
              <h3 class="title">${incident.title}</h3>
              <time datetime="${incident.updated_at}">
                ${formatDate(incident.updated_at)}
                <span class="separator">⦁</span>
                ${timeAgo(incident.updated_at)}
              </time>
              <p class="description">${incident.description}</p>
            </div>
          </div>
        `,
      )
      .join("");
  }

  loadIncidents()
  </script>
{% endblock %}

